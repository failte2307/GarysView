package com.smbcgroup.failte.daoimpl;


import java.util.ArrayList;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;

import javax.persistence.PersistenceContext;
import javax.persistence.PersistenceUnit;
import javax.persistence.Query;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.transaction.annotation.Transactional;

import com.smbcgroup.failte.controller.FailteController;
import com.smbcgroup.failte.dao.FailteDAO;
import com.smbcgroup.failte.dto.EmployeeDTO;
import com.smbcgroup.failte.entity.Employee;
import com.smbcgroup.failte.query.EmployeeQuery;


/**
 * @author Mark
 * 22 May 2019
 */
@Transactional
public class FailteDAOImpl implements FailteDAO {
	

	private final static Logger logger = LoggerFactory.getLogger(FailteDAOImpl.class);
	
	@PersistenceUnit
	private EntityManagerFactory entityManagerFactory;
	
	@PersistenceContext
	private EntityManager entityManager;
	

	public EntityManagerFactory getEntityManagerFactory() {
		return entityManagerFactory;
	}

	public void setEntityManagerFactory(EntityManagerFactory entityManagerFactory) {
		this.entityManagerFactory = entityManagerFactory;
	}

	public void setEntityManager(EntityManager entityManager) {
		this.entityManager = entityManager;
	}
	
	public List<EmployeeDTO> getEmployees(){
	List <EmployeeDTO> employeeList = new ArrayList<EmployeeDTO>();
	List<Employee> employeeQuery = entityManager.createQuery("Select e from Employee e", Employee.class).getResultList();
	
	for(Employee i : employeeQuery) {
		employeeList.add(new EmployeeDTO(i));
	}
	return employeeList;
	}
	
	public List<EmployeeDTO> getSearchedEmployees(EmployeeQuery query){
		List <EmployeeDTO> employeeList = new ArrayList<EmployeeDTO>();
		logger.info("Querying database with params " + query.getEmployeeName());
		List<Employee> employeeQuery = entityManager.createQuery("Select e from Employee e WHERE e.employeeName like :employeeName", Employee.class).setParameter("employeeName",""+query.getEmployeeName()+"%").getResultList();

		for(Employee i : employeeQuery) {
			employeeList.add(new EmployeeDTO(i));
		}
		return employeeList;
		}

	public void createEmployee (EmployeeDTO employee); {
		logger.info("Employee with the following parameters is about to be created ");
		Employee createdEmployee = new Employee(employee);
		
		entityManager.
		entityManager.persist(employee);
		System.out.println("Employee Created");
		
	}

	@Override
	public List<EmployeeDTO> deleteEmployee(int employeeId) {
		List <EmployeeDTO> employeeList = new ArrayList<EmployeeDTO>();
		String query2 = "DELETE from Employee WHERE employeeId = :employeeId";
		Query query =  entityManager.createQuery(query2,Employee.class).setParameter("employeeId", employeeId);
		query.setParameter("employeeId", employeeId);
		query.executeUpdate();
//		for(Employee i : deleteEmployee) {
//			employeeList.add(new EmployeeDTO(i));
//		}
		return employeeList;
	}
	
	

	

}
